# Copyright 2023 Hedgehog SONiC Foundation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
# 	http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Default values for k8s-tpm-device-plugin.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# One can override all command-line flags with the settings here
# NOTE: the values do not have to be set, if they are not, the
# hard-coded defaults of the application are being taken
pluginSettings:
  # log settings
  # set to "debug" if you need more output
  logLevel: "info"
  # can be "json" or "console"
  logFormat: "json"
  # as the name suggests, only useful for a developer of the plugin
  logDevelopment: "false"
  # the number of virtual /dev/tpmrm0 to create that the kubelet
  # uses during scheduling
  numTpmRmDevices: "64"
  # if true, will inject the TPM2TOOLS_TCTI environment variable
  # with the correct setting to use the passed through device.
  # NOTE: as this is auto-detected anyways, this is not really useful.
  passTpm2toolsTctiEnvVar: "false"

image:
  repository: ghcr.io/githedgehog/k8s-tpm-device-plugin
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

# There should not be any need to change this as this is very optimized for
# running the plugin. However, as there always might be edge cases for people
# to change this, we keep this in the values so that it can be adjusted if
# needed
podSecurityContext: {}

# There should not be any need to change this as this is very optimized for
# running the plugin. However, as there always might be edge cases for people
# to change this, we keep this in the values so that it can be adjusted if
# needed.
# NOTE: Unfortunately, we need to run the plugin as root because of the node setups
# around the /var/lib/kubelet/device-plugins host mount
securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  allowPrivilegeEscalation: false
  runAsNonRoot: false
  runAsUser: 0
  runAsGroup: 0

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# Mark this pod as a critical add-on; when enabled, the critical add-on
# scheduler reserves resources for critical add-on pods so that they can
# be rescheduled after a failure.
# See https://kubernetes.io/docs/tasks/administer-cluster/guaranteed-scheduling-critical-addon-pods/
priorityClassName: "system-node-critical"

runtimeClassName: null

nodeSelector: {}

tolerations: []

affinity: {}
